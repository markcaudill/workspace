---

- name: Configure Local Workspace
  hosts: localhost
  vars: []
  roles:
    - { role: markcaudill.workspace }
  tasks: []

- name: Drone CLI
  hosts: localhost
  vars:
    dest: "{{ bin }}"
  tasks:
    - name: Install
      ansible.builtin.unarchive:
        src: https://github.com/drone/drone-cli/releases/latest/download/drone_linux_amd64.tar.gz
        dest: "{{ dest }}"
        remote_src: yes
      tags:
        - drone
        - unarchive

- name: kubectl
  hosts: localhost
  become: yes
  tasks:
    - name: Allow packages over HTTPS
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
      tags:
        - kubectl
        - apt

    - name: Ensure GPG key is installed in APT
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      tags:
        - kubectl
        - apt_key
        - apt

    - name: Ensure APT repository is configured
      ansible.builtin.apt_repository:
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
      tags:
        - kubectl
        - apt_repository
        - apt

    - name: Ensure packages are installed
      ansible.builtin.apt:
        name: kubectl
        cache_valid_time: 0
      tags:
        - kubectl
        - apt

- name: kind
  hosts: localhost
  tasks:
    - name: Install
      ansible.builtin.shell: GO111MODULE="on" go get sigs.k8s.io/kind@v0.11.1
      tags:
        - kind
        - shell

- name: Minikube
  hosts: localhost
  tasks:
    - name: Install
      become: yes
      ansible.builtin.apt:
        deb: https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
      tags:
        - minikube
        - apt

- name: Helm
  hosts: localhost
  tasks:
    - name: Install
      become: yes
      community.general.snap:
        name: helm
        classic: yes
      tags:
        - helm
        - snap

- name: Minecraft
  hosts: localhost
  tasks:
    - name: Install
      become: yes
      ansible.builtin.apt:
        deb: https://launcher.mojang.com/download/Minecraft.deb
      tags:
        - minecraft
        - apt

- name: kgt
  hosts: localhost
  vars:
    repo_dir: "{{ xdg_data_home }}/kgt"
  tasks:
    - name: Ensure prerequisites are installed
      become: yes
      ansible.builtin.apt:
        name:
          - bmake
      tags:
        - kgt
        - apt

    - name: "Checkout to {{ repo_dir }}"
      ignore_errors: yes
      ansible.builtin.git:
        repo: https://github.com/katef/kgt.git
        recursive: yes
        dest: "{{ repo_dir }}"
      tags:
        - kgt
        - git

    - name: Install
      environment:
        PREFIX: "{{ ansible_env.HOME }}/.local"
      ansible.builtin.shell: pmake -r install
      args:
        chdir: "{{ repo_dir }}"
      tags:
        - kgt
        - make

- name: libfsm
  hosts: localhost
  vars:
    repo_dir: "{{ xdg_data_home }}/libsfm"
  tasks:
    - name: Ensure prerequisites are installed
      become: yes
      ansible.builtin.apt:
        name:
          - bmake
      tags:
        - libfsm
        - apt

    - name: "Checkout to {{ repo_dir }}"
      ignore_errors: yes
      ansible.builtin.git:
        repo: https://github.com/katef/libfsm.git
        recursive: yes
        dest: "{{ repo_dir }}"
      tags:
        - libfsm
        - git

    - name: Install
      environment:
        PREFIX: "{{ ansible_env.HOME }}/.local"
      ansible.builtin.shell: pmake -r install
      args:
        chdir: "{{ repo_dir }}"
      tags:
        - libfsm
        - make


- name: XFCE
  hosts: localhost
  vars:
    natscrollcmd: synclient VertScrollDelta=-110 HorizScrollDelta=-110
  tasks:
    - name: Ensure packages are installed
      become: yes
      ansible.builtin.apt:
        name:
          - xfce4
          - xserver-xorg-input-synaptics
          - xfce4-genmon-plugin
      tags:
        - xfce
        - apt

    - name: Ensure reverse scrolling is disabled
      community.general.xfconf:
        channel: pointer
        property: /SynPS2_Synansible.builtin.aptics_TouchPad/ReverseScrolling
        value: false
        value_type: bool
      tags:
        - xfce
        - xfconf

    - name: Ensure .config/autostart firectory exists
      ansible.builtin.file:
        path: "{{ xdg_config_home }}/autostart"
        state: directory
      tags:
        - xfce
        - file

    - name: Ensure natural scrolling is configured on startup
      ansible.builtin.copy:
        dest: "{{ xdg_config_home }}/autostart/NaturalScrolling.desktop"
        content: |
          [Desktop Entry]
          Encoding=UTF-8
          Version=0.9.4
          Type=Application
          Name=NaturalScroll
          Comment=Set natural scroll
          Exec={{ natscrollcmd }}
          OnlyShowIn=XFCE;
          StartupNotify=false
          Terminal=false
          Hidden=false
      tags:
        - xfce
        - copy

    - name: Ensure natural scrolling is configured for current session
      ansible.builtin.shell: "{{ natscrollcmd }}"
      changed_when: false
      tags:
        - xfce
        - shell

- name: Spotify
  hosts: localhost
  tasks:
    - name: Ensure key is installed
      become: yes
      ansible.builtin.apt_key:
        url: https://download.spotify.com/debian/pubkey_0D811D58.gpg
      tags:
        - spotify
        - apt_key
        - apt

    - name: Ensure repository is configured
      become: yes
      ansible.builtin.apt_repository:
        repo: deb http://repository.spotify.com stable non-free
        filename: spotify
      tags:
        - spotify
        - apt_repository
        - apt

    - name: Ensure Spotify is installed
      become: yes
      ansible.builtin.apt:
        name: spotify-client
        cache_valid_time: 0
      tags:
        - spotify
        - apt

- name: Steam
  hosts: localhost
  tasks:
    - name: Ensure package is installed
      become: yes
      ansible.builtin.apt:
        deb: https://cdn.cloudflare.steamstatic.com/client/installer/steam.deb
      tags:
        - steam
        - apt

- name: Leiningen
  hosts: localhost
  vars:
    lein_url: https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
    lein_installer: "{{bin }}/lein"
  tasks:
    - name: Install dependency packages
      become: yes
      ansible.builtin.apt:
        name:
          - openjdk-11-jdk
      tags:
        - apt
        - leiningen
        - clojure

    - name: Ensure installer is downloaded
      ansible.builtin.get_url:
        url: "{{ lein_url }}"
        dest: "{{ lein_installer }}"
        mode: 0700
      tags:
        - leiningen
        - clojure
        - get_url

    - name: Ensure leiningen is installed
      ansible.builtin.shell:
        cmd: "{{ lein_installer }}"
        creates: "{{ ansible_env.HOME }}/.lein"
      tags:
        - leiningen
        - clojure
        - shell

- name: Signal
  hosts: localhost
  tasks:
    - name: Ensure key is installed
      become: yes
      ansible.builtin.apt_key:
        url: https://updates.signal.org/desktop/apt/keys.asc
      tags:
        - signal
        - apt_key
        - apt

    - name: Ensure Signal APT repository is configured
      become: yes
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://updates.signal.org/desktop/apt xenial main"
        filename: signal
      tags:
        - signal
        - apt_repository
        - apt

    - name: Ensure Signal is installed
      become: yes
      ansible.builtin.apt:
        name: signal-desktop
        cache_valid_time: 0
      tags:
        - signal
        - apt

- name: Hashicorp
  hosts: localhost
  tasks:
    - name: Ensure key is installed
      become: yes
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
      tags:
        - hashicorp
        - apt_key
        - apt

    - name: Ensure APT repository is configured
      become: yes
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        filename: hashicorp
      tags:
        - hashicorp
        - apt_repository
        - apt

    - name: Install
      become: yes
      ansible.builtin.apt:
        name:
          - packer
          - terraform
          - vault
        cache_valid_time: 0
      tags:
        - hashicorp
        - apt

- name: LÃ–VE and Lua
  hosts: localhost
  become: yes
  tasks:
    - name: Install
      ansible.builtin.apt:
        name:
          - love
          - lua5.4
      tags:
        - love
        - lua
        - apt


- name: Node.js
  hosts: localhost
  become: yes
  tasks:
    - name: Ensure key is installed
      become: yes
      ansible.builtin.apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
      tags:
        - nodejs
        - apt_key
        - apt

    - name: Set repository
      ansible.builtin.apt_repository:
        repo: "deb https://deb.nodesource.com/node_16.x {{ ansible_distribution_release }} main"
        filename: nodesource
      tags:
        - nodejs
        - apt_repository
        - apt

    - name: Install
      ansible.builtin.apt:
        name:
          - nodejs
      tags:
        - nodejs
        - apt

- name: virtualization
  hosts: localhost
  become: true
  vars:
    - username: mark
  tasks:
    - name: install packages
      ansible.builtin.apt:
        name:
          - qemu-kvm
          - libvirt-daemon-system
          - libvirt-clients
          - bridge-utils
          - virt-manager
      tags:
        - virtualization
        - apt

    - name: "Ensure {{ username }} is in the necessary groups"
      ansible.builtin.user:
        name: "{{ username }}"
        append: yes
        groups:
          - libvirt
          - kvm
      tags:
        - virtualization
        - user
