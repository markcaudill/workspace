workspace_xdg_directories:
  bin: "{{ ansible_env.HOME }}/.local/bin"
  cache_home: "{{ ansible_env.XDG_CACHE_HOME | default(ansible_env.HOME + '/.cache') }}"
  config_home: "{{ ansible_env.XDG_CONFIG_HOME | default(ansible_env.HOME + '/.config') }}"
  data_home: "{{ ansible_env.XDG_DATA_HOME | default(ansible_env.HOME + '/.local/share') }}"
  state_home: "{{ ansible_env.XDG_STATE_HOME | default(ansible_env.HOME + '/.local/state') }}"

workspace_directories:
  - { path: "{{ workspace_xdg_directories.bin }}", mode: '0750' }
  - { path: "{{ workspace_xdg_directories.cache_home }}", mode: '0750' }
  - { path: "{{ workspace_xdg_directories.config_home }}", mode: '0750' }
  - { path: "{{ workspace_xdg_directories.data_home }}", mode: '0750' }
  - { path: "{{ workspace_xdg_directories.state_home }}", mode: '0750' }
  - { path: "{{ ansible_env.HOME }}/.nvm", mode: '0750' }

workspace_environment:
  GOBIN: "{{ workspace_xdg_directories.data_home }}/go/bin"
  GOPATH: "{{ workspace_xdg_directories.data_home }}/go"
  PATH: "{{ workspace_xdg_directories.data_home }}/go/bin:{{ workspace_xdg_directories.bin }}:{{ ansible_env.PATH }}"
  XDG_CACHE_HOME: "{{ workspace_xdg_directories.cache_home }}"
  XDG_CONFIG_HOME: "{{ workspace_xdg_directories.config_home }}"
  XDG_DATA_HOME: "{{ workspace_xdg_directories.data_home }}"
  XDG_STATE_HOME: "{{ workspace_xdg_directories.state_home }}"
  PROFILE: "/dev/null"

workspace_prerequisite_packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - flatpak
  - git
  - gnupg2
  - libssl-dev
  - make
  - python3-pip
  - rlwrap
  - snapd
  - software-properties-common
  - stow

workspace_prerequisite_debs:
  - "https://packages.microsoft.com/config/ubuntu/{{ ansible_lsb.release }}/packages-microsoft-prod.deb"

workspace_apt_keys:
  - https://apt.releases.hashicorp.com/gpg
  - https://deb.nodesource.com/gpgkey/nodesource.gpg.key
  - https://download.docker.com/linux/debian/gpg
  - https://packages.cloud.google.com/apt/doc/apt-key.gpg
  - https://cli.github.com/packages/githubcli-archive-keyring.gpg

workspace_apt_repos:
  - "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
  - "deb https://apt.kubernetes.io/ kubernetes-xenial main"
  - "deb https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
  - "deb https://deb.nodesource.com/node_16.x {{ ansible_distribution_release }} main"
  - "deb [arch=amd64] https://cli.github.com/packages stable main"
  - "ppa:lutris-team/lutris"

workspace_apt_debs:
  - https://cdn.cloudflare.steamstatic.com/client/installer/steam.deb
  - https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64
  - https://discord.com/api/download?platform=linux&format=deb
  - https://downloads.raspberrypi.org/imager/imager_latest_amd64.deb
  - https://global.download.synology.com/download/Utility/SynologyDriveClient/3.1.0-12920/Ubuntu/Installer/x86_64/synology-drive-client-12920.x86_64.deb
  - https://launcher.mojang.com/download/Minecraft.deb
  - https://us02web.zoom.us/client/latest/zoom_amd64.deb

workspace_services:
  - { name: docker, enabled: true, state: started }

workspace_apt_packages:
  - aria2
  - bat
  - bridge-utils
  - buildah
  - crun
  - deja-dup
  - docker-ce
  - docker-compose
  - duplicity
  - entr
  - exa
  - fonts-firacode
  - fonts-noto-color-emoji
  - fritzing
  - gcc-multilib
  - gh
  - gimp
  - git
  - gnupg2
  - gnupg-agent
  - hopenpgp-tools
  - jq
  - kicad
  - kubectl
  - leiningen
  - libarchive-zip-perl
  - libncurses-dev
  - libseccomp2
  - libvirt-clients
  - libvirt-daemon-system
  - lm-sensors
  - logisim
  - lutris
  - m4
  - mpv
  - neofetch
  - nodejs
  - packer
  - pcscd
  - podman
  - powershell
  - pv
  - qemu-kvm
  - scdaemon
  - shellcheck
  - skopeo
  - terraform
  - thunderbird
  - tidy
  - tmux
  - vault
  - vim
  - virt-manager
  - vlc
  - weechat
  - whois
  - winetricks
  - xclip
  - xmlstarlet
  - xournal
  - youtube-dl
  - yubikey-manager
  - yubikey-personalization

workspace_flatpak_remotes:
  - name: flathub
    flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo

workspace_flatpaks:
  - name: org.signal.Signal
    method: user
    remote: flathub
  - name: com.spotify.Client
  - name: md.obsidian.Obsidian

workspace_snaps: []

workspace_pip_packages:
  - { name: "molecule[ansible, lint, docker]", extra_args: --user }

workspace_archives:
  - name: ctlptl
    url: https://github.com/tilt-dev/ctlptl/releases/download/v0.6.0/ctlptl.0.6.0.linux.x86_64.tar.gz
    dest: "{{ workspace_xdg_directories.bin }}"
    include: ctlptl
    creates: "{{ workspace_xdg_directories.bin }}/ctlptl"
  - name: go
    url: https://go.dev/dl/go1.18.linux-amd64.tar.gz
    dest: "{{ workspace_xdg_directories.data_home }}"
  - name: wtfutil
    url: https://github.com/wtfutil/wtf/releases/latest/download/wtf_0.41.0_linux_amd64.tar.gz
    dest: "{{ workspace_xdg_directories.data_home }}"

workspace_go_packages:
  - package: github.com/ericchiang/pup@latest
    creates: "{{ workspace_xdg_directories.data_home }}/go/bin/pup"
  - package: github.com/jessfraz/pony@latest
    creates: "{{ workspace_xdg_directories.data_home }}/go/bin/pony"
  - package: sigs.k8s.io/kind@v0.11.1
    creates: "{{ workspace_xdg_directories.data_home }}/go/bin/kind"

workspace_curl_bashes:
  - url: https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.sh
    dest: "{{ workspace_xdg_directories.cache_home }}/tilt_install.sh"
    creates: "{{ ansible_env.HOME }}/.local/bin/tilt"
  - url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh
    dest: "{{ workspace_xdg_directories.cache_home }}/nvm_install.sh"
    creates: "{{ ansible_env.HOME }}/.nvm"
  - url: https://get.pulumi.com
    dest: "{{ workspace_xdg_directories.cache_home }}/pulumi_install.sh"
    creates: "{{ ansible_env.HOME }}/.pulumi/bin/pulumi"
  - url: https://download.clojure.org/install/linux-install-1.10.3.1087.sh
    dest: "{{ workspace_xdg_directories.cache_home }}/linux-install-1.10.3.1087.sh"
    creates: "{{ workspace_xdg_directories.bin }}/clj"
    extra_args: "--prefix {{ ansible_env.HOME }}/.local"
  - url: https://starship.rs/install.sh
    dest: "{{ workspace_xdg_directories.cache_home }}/starship_install.sh"
    creates: "{{ workspace_xdg_directories }}/starship"
    extra_args: "-b {{ workspace_xdg_directories.bin }} -y"

workspace_git_repos: []

workspace_make_targets:
  - chdir: "{{ workspace_xdg_directories.data_home }}/dotfiles"
    target: stow
    failed_when: false

workspace_user_groups:
  - { user: "{{ lookup('env', 'USER') }}", groups: [dialout, docker, kvm, libvirt] }

workspace_bins:
  - url: https://github.com/openfaas/faas-cli/releases/latest/download/faas-cli
    dest: "{{ ansible_env.HOME }}/.local/bin/faas-cli"
    creates: "{{ ansible_env.HOME }}/.local/bin/faas-cli"
  - url: https://github.com/alexellis/arkade/releases/latest/download/arkade
    dest: "{{ ansible_env.HOME }}/.local/bin/arkade"
    creates: "{{ ansible_env.HOME }}/.local/bin/arkade"

workspace_files:
  - src: "{{ workspace_xdg_directories.data_home }}/wtf_0.41.0_linux_amd64/wtfutil"
    dest: "{{ workspace_xdg_directories.bin }}/wtfutil"
    state: link

workspace_sysctl:
  - name: fs.inotify.max_user_watches
    value: 524288
